apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
  labels:
    name: myapp
  annotations:  # annotations are only for information
    buildversion: "1.34"
spec:
  serviceAccountName: build-robot # assign this service account to this pod
  tolerations:  # This pod will "tolerate" this taint on a node: app=blue:NoSchedule
    - key: "app"
      operator: "Equal"
      value: "blue"
      effect: "NoSchedule"
  containers:
  - name: nginx-container
    image: nginx
    command: ["sleep"] # equivalent to ENTRYPOINT in docker
    # command: ["/bin/sh", "-c", "<command>"]  use /bin/sh before executing a shell command
    args: ["5000"] # equivalent to CMD in docker
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: "1"
        memory: 500Mi
    ports:
      - containerPort: 8080
    env:
      - name: APP_COLOR
        value: blue
      - name: APP_MODE
        valueFrom:
          configMapKeyRef:
            name: myapp-config
            key: APP_MODE
    envFrom:
      - configMapRef:
          name: myapp-config
      - secretRef:
          name: myapp-secret
    readinessProbe:  # readiness probes to change when the container status should be changed to "READY"
      httpGet:
        path: /api/ready
        port: 8080
      # tcpSocket:
      #   port: 3306
      # exec:
      #   command:
      #     - cat
      #     - /app/is_ready
      initialDelaySeconds: 10
      periodSeconds: 5
      failureThreshold: 5
    livenessProbe:  # to override the default behaviour of defining when the container is 'healthy', configured similarly like readiness
      httpGet:
        path: /api/healthy
        port: 8080
  nodeName: controlplane # this pod will be deployed to the node with name controlplane
  nodeSelector:
    size: Large # this pod will be deployed to the node with label size=Large
  affinity:
    nodeAffinity:  # node affinity is like node selectors but with ability to use complex expressions 
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: size
            operator: In
            values:  # this pod will be deployed to the node with label size=Large OR Medium
            - Large
            - Medium
